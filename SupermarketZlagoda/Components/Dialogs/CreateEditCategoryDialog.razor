@using SupermarketZlagoda.Data.Model
@implements IDialogContentComponent<Category>

@* Header *@
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Body *@
<FluentDialogBody>
    <EditForm EditContext="_editContext">
        <DataAnnotationsValidator />
        <FluentTextField style="width: 100%;" @bind-Value="@Content.Name">Category name:</FluentTextField>
        <FluentValidationMessage For="() => Content.Name"></FluentValidationMessage>
    </EditForm>
</FluentDialogBody>

<FluentDialogFooter>
        <FluentButton Type="ButtonType.Submit"
                      Disabled="@(!_editContext.Validate())"
                      Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
        <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
    </FluentDialogFooter>

@code {
    [Parameter]
    public Category Content { get; set; } = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;
    private EditContext _editContext = default!;
    
    protected override void OnInitialized()
    {
        _editContext = new EditContext(Content);
    }
    
    private async Task SaveAsync()
    {
        await Dialog.CloseAsync(Content);
    }

    private async Task CancelAsync()
    {
        if (!_editContext.Validate()) return;
        await Dialog.CancelAsync();
    }

}
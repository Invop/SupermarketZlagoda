@using SupermarketZlagoda.Data.Model
@using SupermarketZlagoda.Data
@using SupermarketZlagoda.Components.Pages
@implements IDialogContentComponent<CustomerCard>

@* Header *@
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

@* Body *@

<FluentDialogBody>
    <EditForm EditContext="_editContext">
        <DataAnnotationsValidator />
        <FluentTextField style="width: 100%;" @bind-Value="@Content.Surname">Surname:</FluentTextField>
        <FluentValidationMessage For="() => Content.Surname"></FluentValidationMessage>
        <br/><br/>
        <FluentTextField style="width: 100%;" @bind-Value="@Content.Name">Name:</FluentTextField>
        <FluentValidationMessage For="() => Content.Name"></FluentValidationMessage>
        <br/><br/>
        <FluentTextField style="width: 100%;" @bind-Value="@Content.Patronymic">Patronymic:</FluentTextField>
        <FluentValidationMessage For="() => Content.Patronymic"></FluentValidationMessage>
        <br/><br/>
        <FluentTextField style="width: 100%;" @bind-Value="@Content.Phone">Phone:</FluentTextField>
        <FluentValidationMessage For="() => Content.Phone"></FluentValidationMessage>
        <br/><br/>
        <FluentTextField style="width: 100%;" @bind-Value="@Content.City">City:</FluentTextField>
        <FluentValidationMessage For="() => Content.City"></FluentValidationMessage>
        <br/><br/>
        <FluentTextField style="width: 100%;" @bind-Value="@Content.Street">Street:</FluentTextField>
        <FluentValidationMessage For="() => Content.Street"></FluentValidationMessage>
        <br/><br/>
        <FluentTextField style="width: 100%;" @bind-Value="@Content.Index">Index:</FluentTextField>
        <FluentValidationMessage For="() => Content.Index"></FluentValidationMessage>
        <br/><br/>
        <FluentNumberField style="width: 100%;" @bind-Value="@Content.Percentage">Percentage:</FluentNumberField>
    </EditForm>
    </FluentDialogBody>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Disabled="@(!_editContext.Validate())" Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>

@code {
    
    string? stringValue;
    [Parameter]
    public CustomerCard Content { get; set; } = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;
    private EditContext _editContext = default!;
    private async Task SaveAsync()
    {
        if (_editContext.Validate())
        {
            await Dialog.CloseAsync(Content);
        }
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
    protected override async Task OnInitializedAsync()
    {
        InitializeEditContextForContent();
    }
    
    private void InitializeEditContextForContent()
    {
        _editContext = new EditContext(Content);
    }
    
}
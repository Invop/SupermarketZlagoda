@page "/check"
@using SupermarketZlagoda.Data
@inject UserState UserState
@inject IDialogService DialogService
<FluentToolbar id="toolbar-fluent-components">
    @if (!IsManager)
    {
        <FluentButton Appearance="Appearance.Accent" OnClick="@(OpenCreateDialogAsync)">Add new check</FluentButton>
        <FluentTextField @bind-Value="CheckSearchTerm" Placeholder="Search by Id"></FluentTextField>
    }
    @if (IsManager)
    {
        <FluentSelect Items=@employeeOptionsSort
                      TOption="Option<string?>"
                      Label="Select an employee"
                      Width="300px"
                      OptionText="@(i => i.Text.ToString())"
                      OptionValue="@(i => i.Value.ToString())"
                      @bind-SelectedOption="@selectedEmployeeOption"
                      ValueChanged="@OnSelectedEmployeeChanged"/>
    }
    <FluentDivider Style="height: 30px;" Role="DividerRole.Separator" Orientation="Orientation.Vertical"></FluentDivider>
    <span>Select dates</span>
    <FluentDatePicker @bind-Value="@DateFromValue"/>
    <FluentDatePicker @bind-Value="@DateToValue"/>
    <FluentButton Icon="CalendarToday" OnClick="@(SetTodayDate)">Today</FluentButton>
    <FluentButton Icon="CalendarToday" OnClick="@(ResetDate)">Reset Date</FluentButton>

</FluentToolbar>
<FluentDataGrid Items="@_items" ResizableColumns="true" ItemSize="54" Pagination="@_pagination" GridTemplateColumns="1fr 1fr 1fr 1fr 1fr 1fr 1fr"
                Style="height: 600px; width: 1500px; overflow:auto;">
    <PropertyColumn Property="@(c => c.IdCheck)"/>
    <PropertyColumn Title="IdEmployee" Property="@(c => _employees[c.IdEmployee])" />
<PropertyColumn Title="IdCustomerCard" Property="@(c => c.IdCardCustomer.HasValue ? _customerCards[c.IdCardCustomer.Value] : string.Empty)" />
    <PropertyColumn Property="@(c => c.PrintDate)"/>
    <PropertyColumn Property="@(c => c.SumTotal)"/>
    <PropertyColumn Property="@(c => c.Vat)"/>
    <TemplateColumn Title="Actions" Align="@Align.End">
        <FluentButton IconEnd="@(new Icons.Regular.Size16.Open())" OnClick="@(() => OpenCheckAsync(context))"/>
        @if (IsManager)
        {
            <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => OpenDeleteDialogAsync(context))"/>
        }
    </TemplateColumn>

</FluentDataGrid>
<FluentPaginator State="@_pagination">
    <SummaryTemplate>
        There are <strong>@(_pagination.TotalItemCount ?? 0)</strong> rows
    </SummaryTemplate>
    <PaginationTextTemplate>
        This is page <strong>@(_pagination.CurrentPageIndex + 1)</strong> out of a total of <strong>@(_pagination.LastPageIndex + 1)</strong> pages
    </PaginationTextTemplate>
</FluentPaginator>
@if (IsManager)
{
    <div style="font-size: larger;  font-weight: bold; display: flex; justify-content: center;">
       @* Total for @selectedEmployeeOption.Text is @TotalSum *@
    </div>
}
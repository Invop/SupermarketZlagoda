@page "/customer-card"
@using Blazored.LocalStorage
@inject User User
@inject IDialogService DialogService
@inject IJSRuntime IJS
@inject ILocalStorageService localStorage

<FluentToolbar id="toolbar-fluent-components">
    @if (User.IsManager)
    {
        <FluentButton Appearance="Appearance.Accent" OnClick="@(OpenCreateDialogAsync)">Add new card customer</FluentButton>
    }
    <FluentRadioGroup @bind-Value="SortType">
        <FluentRadio Value="@(0)">Sort by surname<FluentIcon Value="new Icons.Regular.Size16.ArrowDown()"/></FluentRadio>
        <FluentRadio Value="@(1)">Sort by surname<FluentIcon Value="new Icons.Regular.Size16.ArrowUp()"/></FluentRadio>
    </FluentRadioGroup>
    @if (User.IsManager)
    {
        <FluentSelect Items="@PercentageOptions"
                      TOption="Option<int?>"
                      Label="Select a discount percentage"
                      Width="100px"
                      OptionText="@(i => i.Text.ToString())"
                      OptionValue="@(i => i.Value.ToString())"
                      @bind-SelectedOption="@selectedPercentageOption"
                      ValueChanged="@OnSelectedPercentageChanged"/>
    }
    <FluentTextField @bind-Value="SearchTerm" Placeholder="Search by surname"></FluentTextField>
    <FluentButton IconEnd="@(new Icons.Regular.Size16.Print())" OnClick="@PrintTable"/>
    <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"/>
    <br/>
    <br/>
    <br/>
    <FluentButton OnClick="@ShowInformationAsync" IconEnd="@(new Icons.Regular.Size16.Question())"></FluentButton>
    <span>Select dates</span>
    <FluentDatePicker @bind-Value="@DateFromValue"/>
    <FluentDatePicker @bind-Value="@DateToValue"/>
    <FluentButton Icon="CalendarToday" OnClick="@(SetTodayDate)">Today</FluentButton>
    <FluentButton Icon="CalendarToday" OnClick="@(ResetDate)">Reset Date</FluentButton>
</FluentToolbar>
<FluentDataGrid Items="@_items" ResizableColumns="true" Virtualize="true" ItemSize="54" Pagination="@_pagination" GridTemplateColumns="1fr 1.1fr 1fr 1.2fr 1fr 1.2fr 0.9fr 1fr 1fr 0.6fr"
                Style="height: 600px; width: 1500px; overflow:auto;">
    <PropertyColumn Property="@(c => c.Id)"/>
    <PropertyColumn Property="@(c => c.Surname)"/>
    <PropertyColumn Property="@(c => c.Name)"/>
    <PropertyColumn Property="@(c => c.Patronymic)"/>
    <PropertyColumn Property="@(c => c.Phone)"/>
    <PropertyColumn Property="@(c => c.Percentage)"/>
    <PropertyColumn Property="@(c => c.City)"/>
    <PropertyColumn Property="@(c => c.Street)"/>
    <PropertyColumn Property="@(c => c.Index)"/>
    <PropertyColumn Property="@(c => c.ProductNumber)"/>
    <TemplateColumn Title="Actions" Align="@Align.End">
        <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())" OnClick="@(() => OpenEditDialogAsync(context))"/>
        @if (User.IsManager)
        {
            <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => OpenDeleteDialog(context))"/>
        }
    </TemplateColumn>

</FluentDataGrid>
<FluentPaginator State="@_pagination">
    <SummaryTemplate>
        There are <strong>@(_pagination.TotalItemCount ?? 0)</strong> rows
    </SummaryTemplate>
    <PaginationTextTemplate>
        This is page <strong>@(_pagination.CurrentPageIndex + 1)</strong> out of a total of <strong>@(_pagination.LastPageIndex + 1)</strong> pages
    </PaginationTextTemplate>
</FluentPaginator>


<FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"/>
<br/><br/>
<details>
    <summary style="font-size: 20px; font-weight: bold">
        Всі карти клієнтів, які мають хоча б один чек, де містяться тільки акційні товари
    </summary>
    <br/><br/>
    <FluentDataGrid Items="@_zapitdata" ResizableColumns="true" Virtualize="true" ItemSize="54"
                    Pagination="@_pagination" GridTemplateColumns="1fr 1.1fr 1fr 1.2fr 1fr 1.2fr 0.9fr 1fr 1fr 0.6fr"
                    Style="height: 600px; width: 1500px; overflow:auto;">
        <PropertyColumn Property="@(c => c.Id)"/>
        <PropertyColumn Property="@(c => c.Surname)"/>
        <PropertyColumn Property="@(c => c.Name)"/>
        <PropertyColumn Property="@(c => c.Patronymic)"/>
        <PropertyColumn Property="@(c => c.Phone)"/>
        <PropertyColumn Property="@(c => c.Percentage)"/>
        <PropertyColumn Property="@(c => c.City)"/>
        <PropertyColumn Property="@(c => c.Street)"/>
        <PropertyColumn Property="@(c => c.Index)"/>
        <TemplateColumn Title="Actions" Align="@Align.End">
            <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())" OnClick="@(() => OpenEditDialogAsync(context))"/>
            @if (User.IsManager)
            {
                <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => OpenDeleteDialog(context))"/>
            }
        </TemplateColumn>

    </FluentDataGrid>
    <FluentPaginator State="@_pagination">
        <SummaryTemplate>
            There are <strong>@(_pagination.TotalItemCount ?? 0)</strong> rows
        </SummaryTemplate>
        <PaginationTextTemplate>
            This is page <strong>@(_pagination.CurrentPageIndex + 1)</strong> out of a total of
            <strong>@(_pagination.LastPageIndex + 1)</strong> pages
        </PaginationTextTemplate>
    </FluentPaginator>
</details>